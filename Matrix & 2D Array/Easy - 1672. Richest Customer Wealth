You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. 
Return the wealth that the richest customer has.
A customer's wealth is the amount of money they have in all their bank accounts. 
The richest customer is the customer that has the maximum wealth.

Input: accounts = [[1,2,3],[3,2,1]]
Output: 6
Explanation:
1st customer has wealth = 1 + 2 + 3 = 6
2nd customer has wealth = 3 + 2 + 1 = 6
Both customers are considered the richest with a wealth of 6 each, so return 6.

Input: accounts = [[1,5],[7,3],[3,5]]
Output: 10
Explanation: 
1st customer has wealth = 6
2nd customer has wealth = 10 
3rd customer has wealth = 8
The 2nd customer is the richest with a wealth of 10.

Input: accounts = [[2,8,7],[7,1,3],[1,9,5]]
Output: 17

Constraints:
m == accounts.length
n == accounts[i].length
1 <= m, n <= 50
1 <= accounts[i][j] <= 100
____________________________________________________________________________________________________
Basic Understanding:
-- There are M customers and each of them has some money deposited in N number of banks. 
-- To determine which customer is the richest, we must find the sum of money that each customer has across all of their 
   bank accounts i.e., each customer's total wealth.

Solution:
-- Initialize max_wealth to 0
-- Iterate over the customers i.e., accounts
-- For each i in accounts, we iterate over the money deposited in different banks and add it to total_wealth
-- Compare total wealth with max_wealth. If total wealth is greater than max_wealth then update max_wealth.
-- Return max_wealth as output

Time complexity: O(M⋅N)
For each of the M customers, we need to iterate over all N banks to find the sum of his/her wealth.
Space complexity: O(1)

lass Solution:
    def maximumWealth(self, accounts: List[List[int]]) -> int:
        max_wealth = 0
        for i in accounts:
            total_wealth = sum(i)
            max_wealth = max(max_wealth,total_wealth)
        return max_wealth
_______________________________________________________________________________________

 
